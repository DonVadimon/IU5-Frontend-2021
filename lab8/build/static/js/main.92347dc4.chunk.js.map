{"version":3,"sources":["components/assets/icons/x.svg","components/TodoItem.jsx","components/TodoAddForm.jsx","components/TodoListTitle.jsx","components/TodoList.jsx","components/assets/icons/plus-square.svg","components/AddTodoListButton.jsx","components/assets/icons/list-check.svg","components/Header.jsx","components/NoTasksMessage.jsx","components/TodoDesk.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["TodoItem","todo","onToggle","onEdit","onDelete","id","task","done","useState","inputTask","setInputTask","textareaRef","useRef","classNames","concat","useEffect","current","style","height","scrollHeight","className","join","type","checked","onChange","ref","value","e","target","onBlur","trim","length","onKeyPress","key","toLowerCase","blur","onClick","src","x","alt","TodoAddForm","addHandler","setTask","onAdd","name","placeholder","onKeyUp","TodoListTitle","listTitle","editTodoList","inputTitle","setInputTitle","TodoList","todos","addNewTodo","toggleTodo","editTodo","deleteTodo","deletTodoList","map","AddTodoListButton","addNewTodoList","addIcon","Header","children","background","logo","NoTasksMessage","TodoDesk","todoLists","setTodoLists","savedTodos","JSON","parse","localStorage","getItem","setItem","stringify","deleteTodoList","prev","filter","todoList","listId","newTitle","title","newTodo","Date","now","todoId","newTask","newTodoList","list","bind","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92347dc4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/x.6ab2d915.svg\";","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./assets/css/TodoItem.css\";\nimport x from \"./assets/icons/x.svg\";\n\nexport default function TodoItem({ todo, onToggle, onEdit, onDelete }) {\n  const { id, task, done } = todo;\n  const [inputTask, setInputTask] = useState(task);\n  const textareaRef = useRef(null);\n  const classNames = [\"todo-item\"].concat(done ? \"done\" : \"\");\n\n  useEffect(() => {\n    textareaRef.current.style.height = \"0px\";\n    const { scrollHeight } = textareaRef.current;\n    textareaRef.current.style.height = `${scrollHeight}px`;\n  }, [inputTask]);\n\n  const onEnterPress = (e) => {\n    if (e.key.toLowerCase() === \"enter\") {\n      e.target.blur();\n    }\n  };\n\n  const onInputBlur = () => {\n    if (inputTask.trim().length === 0) {\n      onDelete(id);\n    } else {\n      onEdit(id, inputTask);\n    }\n  };\n\n  return (\n    <li className={classNames.join(\" \")}>\n      <input type=\"checkbox\" checked={done} onChange={() => onToggle(id)} />\n      <textarea\n        type=\"text\"\n        ref={textareaRef}\n        value={inputTask}\n        onChange={(e) => setInputTask(e.target.value)}\n        onBlur={onInputBlur}\n        onKeyPress={onEnterPress}\n      />\n      <button type=\"button\" onClick={() => onDelete(id)}>\n        <img src={x} alt=\"Delete\" />\n      </button>\n    </li>\n  );\n}\n\nTodoItem.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    task: PropTypes.string,\n    done: PropTypes.bool,\n  }).isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./assets/css/TodoAddForm.css\";\n\nexport default function TodoAddForm({ addHandler }) {\n  const [task, setTask] = useState(\"\");\n  const textareaRef = useRef(task);\n\n  useEffect(() => {\n    textareaRef.current.style.height = \"0px\";\n    const { scrollHeight } = textareaRef.current;\n    textareaRef.current.style.height = `${scrollHeight}px`;\n  }, [task]);\n\n  const onInputChange = (e) => {\n    setTask(e.target.value);\n  };\n\n  const onAdd = () => {\n    if (task.trim().length === 0) {\n      return;\n    }\n    addHandler(task);\n  };\n\n  const onEscapePress = (e) => {\n    if (e.key.toLowerCase() === \"escape\") {\n      e.target.blur();\n    }\n  };\n\n  const onEnterPress = (e) => {\n    if (e.key.toLowerCase() === \"enter\") {\n      onAdd();\n      setTask(\"\");\n    }\n  };\n\n  const onAddBtnClick = () => {\n    onAdd();\n    setTask(\"\");\n  };\n\n  return (\n    <div className=\"todo-add-form\">\n      <div className=\"new-todo-wrapper\">\n        <textarea\n          type=\"text\"\n          ref={textareaRef}\n          name=\"new-todo\"\n          placeholder=\"New Task\"\n          onChange={onInputChange}\n          value={task}\n          onKeyPress={onEnterPress}\n          onKeyUp={onEscapePress}\n        />\n      </div>\n      <button type=\"button\" onClick={onAddBtnClick}>\n        Add\n      </button>\n    </div>\n  );\n}\n\nTodoAddForm.propTypes = {\n  addHandler: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./assets/css/TodoListTitle.css\";\n\nexport default function TodoListTitle({ listTitle, editTodoList }) {\n  const [inputTitle, setInputTitle] = useState(listTitle);\n  const textareaRef = useRef(null);\n\n  useEffect(() => {\n    textareaRef.current.style.height = \"0px\";\n    const { scrollHeight } = textareaRef.current;\n    textareaRef.current.style.height = `${scrollHeight}px`;\n  }, [inputTitle]);\n\n  const onInputBlur = () => {\n    if (inputTitle.trim().length !== 0) {\n      editTodoList(inputTitle);\n    }\n  };\n\n  const onEnterPress = (e) => {\n    if (e.key.toLowerCase() === \"enter\") {\n      e.target.blur();\n    }\n  };\n\n  return (\n    <div className=\"todo-list-title\">\n      <textarea\n        type=\"text\"\n        ref={textareaRef}\n        value={inputTitle}\n        onChange={(e) => setInputTitle(e.target.value)}\n        onBlur={onInputBlur}\n        onKeyPress={onEnterPress}\n      />\n    </div>\n  );\n}\n\nTodoListTitle.propTypes = {\n  listTitle: PropTypes.string.isRequired,\n  editTodoList: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TodoItem from \"./TodoItem\";\nimport TodoAddForm from \"./TodoAddForm\";\nimport TodoListTitle from \"./TodoListTitle\";\nimport \"./assets/css/TodoList.css\";\n\nexport default function TodoList({\n  todos,\n  listTitle,\n  addNewTodo,\n  toggleTodo,\n  editTodo,\n  deleteTodo,\n  deletTodoList,\n  editTodoList,\n}) {\n  return (\n    <div className=\"todo-list-container\">\n      <TodoListTitle listTitle={listTitle} editTodoList={editTodoList} />\n      <TodoAddForm addHandler={addNewTodo} />\n      <ul className=\"todo-list\">\n        {todos.map(({ id, task, done }) => (\n          <TodoItem\n            todo={{ id, task, done }}\n            key={id}\n            onToggle={toggleTodo}\n            onEdit={editTodo}\n            onDelete={deleteTodo}\n          />\n        ))}\n      </ul>\n      <button type=\"button\" className=\"delete-list\" onClick={deletTodoList}>\n        Delete\n      </button>\n    </div>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      task: PropTypes.string,\n      done: PropTypes.bool,\n    })\n  ).isRequired,\n  listTitle: PropTypes.string.isRequired,\n  addNewTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired,\n  toggleTodo: PropTypes.func.isRequired,\n  deletTodoList: PropTypes.func.isRequired,\n  editTodoList: PropTypes.func.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/plus-square.1896372c.svg\";","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport \"./assets/css/AddTodoListButton.css\";\nimport addIcon from \"./assets/icons/plus-square.svg\";\n\nexport default function AddTodoListButton({ addNewTodoList }) {\n  return (\n    <div className=\"add-todo-list-container\">\n      <button type=\"button\" className=\"add-todo-list\" onClick={addNewTodoList}>\n        <img src={addIcon} alt=\"add-todo-list\" />\n      </button>\n    </div>\n  );\n}\n\nAddTodoListButton.propTypes = {\n  addNewTodoList: PropTypes.func.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/list-check.e904d766.svg\";","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport \"./assets/css/Header.css\";\nimport logo from \"./assets/icons/list-check.svg\";\n\nexport default function Header({ children }) {\n  return (\n    <nav>\n      <div className=\"nav-wrapper\" style={{ background: \"teal\" }}>\n        <div className=\"logo-container\">\n          <img className=\"logo\" src={logo} alt=\"DonVadimon\" />\n        </div>\n        <div className=\"nav-text\">Add new List</div>\n        {children}\n      </div>\n    </nav>\n  );\n}\n\nHeader.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n","import React from \"react\";\nimport \"./assets/css/NoTasksMessage.css\";\n\nexport default function NoTasksMessage() {\n  return (\n    <div className=\"no-tasks-message-container\">\n      <h1>You have no tasks</h1>\n      <h2>Make some using button in navigation</h2>\n    </div>\n  );\n}\n","/* eslint-disable react/jsx-no-bind */\nimport React, { useState, useEffect } from \"react\";\nimport TodoList from \"./TodoList\";\nimport AddTodoListButton from \"./AddTodoListButton\";\nimport Header from \"./Header\";\nimport NoTasksMessage from \"./NoTasksMessage\";\nimport \"./assets/css/TodoDesk.css\";\n\nexport default function TodoDesk() {\n  const [todoLists, setTodoLists] = useState([]);\n  useEffect(() => {\n    const savedTodos = JSON.parse(localStorage.getItem(\"todoLists\") || \"[]\");\n    setTodoLists(savedTodos);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todoLists\", JSON.stringify(todoLists));\n  }, [todoLists]);\n\n  const addNewTodoList = () => {\n    const newTodoList = {\n      id: Date.now(),\n      todos: [],\n      title: \"Some tasks\",\n    };\n    setTodoLists((prev) => [...prev, newTodoList]);\n  };\n\n  const deleteTodoList = (id) => {\n    setTodoLists((prev) => prev.filter((todoList) => todoList.id !== id));\n  };\n\n  const editTodoList = (listId, newTitle) => {\n    setTodoLists((prev) =>\n      prev.map((todoList) =>\n        listId === todoList.id\n          ? { ...todoList, title: newTitle.trim() }\n          : todoList\n      )\n    );\n  };\n\n  const addNewTodo = (listId, task) => {\n    const newTodo = {\n      id: Date.now(),\n      task,\n      done: false,\n    };\n    setTodoLists((prev) =>\n      prev.map((todoList) =>\n        todoList.id === listId\n          ? { ...todoList, todos: [...todoList.todos, newTodo] }\n          : todoList\n      )\n    );\n  };\n\n  const toggleTodo = (listId, todoId) => {\n    setTodoLists((prev) =>\n      prev.map((todoList) =>\n        listId === todoList.id\n          ? {\n              ...todoList,\n              todos: todoList.todos.map((todo) =>\n                todo.id === todoId ? { ...todo, done: !todo.done } : todo\n              ),\n            }\n          : todoList\n      )\n    );\n  };\n\n  const deleteTodo = (listId, todoId) => {\n    setTodoLists((prev) =>\n      prev.map((todoList) =>\n        listId === todoList.id\n          ? {\n              ...todoList,\n              todos: todoList.todos.filter((todo) => todo.id !== todoId),\n            }\n          : todoList\n      )\n    );\n  };\n\n  const editTodo = (listId, todoId, newTask) => {\n    if (newTask.trim().length === 0) {\n      return;\n    }\n    setTodoLists((prev) =>\n      prev.map((todoList) =>\n        listId === todoList.id\n          ? {\n              ...todoList,\n              todos: todoList.todos.map((todo) =>\n                todo.id === todoId ? { ...todo, task: newTask.trim() } : todo\n              ),\n            }\n          : todoList\n      )\n    );\n  };\n\n  return (\n    <div className=\"todo-desk-container\">\n      <Header>\n        <AddTodoListButton addNewTodoList={addNewTodoList} />\n      </Header>\n      <div className=\"todo-desk\">\n        {todoLists.length !== 0 ? (\n          todoLists.map((list) => (\n            <TodoList\n              todos={list.todos}\n              listTitle={list.title}\n              addNewTodo={addNewTodo.bind(null, list.id)}\n              toggleTodo={toggleTodo.bind(null, list.id)}\n              editTodo={editTodo.bind(null, list.id)}\n              deleteTodo={deleteTodo.bind(null, list.id)}\n              deletTodoList={deleteTodoList.bind(null, list.id)}\n              editTodoList={editTodoList.bind(null, list.id)}\n              key={list.id}\n            />\n          ))\n        ) : (\n          <NoTasksMessage />\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport TodoDesk from \"./components/TodoDesk\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoDesk />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}